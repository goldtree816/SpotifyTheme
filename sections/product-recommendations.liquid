{% comment %} {% schema %}
{
  "name": "Product Recommendations",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Section Heading",
      "default": "You May Also Like"
    },
    {
      "type": "range",
      "id": "products_limit",
      "min": 3,
      "max": 12,
      "step": 1,
      "label": "Maximum Products to Show",
      "default": 4
    }
  ],
  "blocks": [],
  "presets": [
    {
      "name": "Product Recommendations",
      "category": "Products"
    }
  ]
}
{% endschema %}

<div class="product-recommendations" data-product-id="{{ product.id }}">
  <h2 class="section-heading">{{ section.settings.heading }}</h2>
  
  <div class="recommendations-grid">
    {% assign current_product_id = product.id %}
{% comment %} Try current product's collections first {% endcomment %}
{% assign target_collection = product.collections | first %}

{% comment %} Fallback to a default collection if needed {% endcomment %}
{% unless target_collection and target_collection.products_count > 1 %}
  {% assign target_collection = collections['all'] %}
{% endunless %}

{% if target_collection %}
  <div class="recommendations-grid">
    {% for product in target_collection.products limit: section.settings.products_limit %}
      {% unless product.id == current_product_id %}
        {% render 'product-card', product: product %}
      {% endunless %}
    {% endfor %}
  </div>
{% else %}
  <p class="collection-error">No recommendations available - please ensure products are added to collections</p>
{% endif %}
  </div>
</div>

<style>
  .product-recommendations {
    margin: 40px 0;
    padding: 20px 0;
    border-top: 1px solid #e1e1e1;
  }

  .section-heading {
    font-size: 24px;
    margin-bottom: 30px;
    text-align: center;
  }

  .recommendations-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 25px;
    max-width: 1200px;
    margin: 0 auto;
  }
</style> {% endcomment %}